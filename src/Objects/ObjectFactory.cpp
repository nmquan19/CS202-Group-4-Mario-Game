#include "../../include/Objects/ObjectFactory.h"
#include "../../include/Objects/Block.h"
#include "../../include/Characters/Character.h"
#include "../../include/Enemy/Enemy.h"
#include "../../include/Enemy/Goomba/Goomba.h"
#include "../../include/Enemy/Koopa/Koopa.h"
#include "../../include/Item/Item.h"
#include "../../include/Item/Coin/Coin.h"
#include "../../include/Item/Mushroom/Mushroom.h"
#include "../../include/Item/Fire_Flower/Fire_Flower.h"
#include "../../include/Item/Star/Star.h"
#include "../../include/Item/One_Up/One_Up.h"
#include "../../include/Enemy/Boss/DryBowser/DryBowser.h"
#include "../../include/System/Interface.h"
#include "../../include/Enemy/Koopa/KoopaShell.h"
#include "../../include/System/Constant.h"
#include "../../include/Objects/Spring.h"
#include "../../include/Objects/Projectile/FireBall.h"
#include "../../include/System/Box2DWorldManager.h"
#include <raylib.h>
#include <vector>
#include <algorithm>
#include <memory>

Object::~Object() {
    if (physicsBody) {
        Box2DWorldManager::getInstance().destroyBody(physicsBody);
        physicsBody = nullptr;
    }
}

std::unique_ptr<Object> ObjectFactory::createBlock(BlockType type, Vector2 gridPos) {
    return createSpecificBlock(type, gridPos);
}

std::unique_ptr<Block> ObjectFactory::createSpecificBlock(BlockType type, Vector2 gridPos) {
    switch (type) {
        case BlockType::BLOCK_1_1_2:
            return std::make_unique<Block_1_1_2Block>(gridPos);
        case BlockType::BLOCK_1_1_3:
            return std::make_unique<Block_1_1_3Block>(gridPos);
        case BlockType::BLOCK_1_1_12:
            return std::make_unique<Block_1_1_12Block>(gridPos);
        case BlockType::BLOCK_1_1_13:
            return std::make_unique<Block_1_1_13Block>(gridPos);
        case BlockType::BLOCK_1_1_14:
            return std::make_unique<Block_1_1_14Block>(gridPos);
        case BlockType::BLOCK_1_1_15:
            return std::make_unique<Block_1_1_15Block>(gridPos);
        case BlockType::BLOCK_1_1_16:
            return std::make_unique<Block_1_1_16Block>(gridPos);
        case BlockType::BLOCK_1_2_7:
            return std::make_unique<Block_1_2_7Block>(gridPos);
        case BlockType::BLOCK_1_2_8:
            return std::make_unique<Block_1_2_8Block>(gridPos);
        case BlockType::BLOCK_1_2_12:
            return std::make_unique<Block_1_2_12Block>(gridPos);
        case BlockType::BLOCK_1_2_13:
            return std::make_unique<Block_1_2_13Block>(gridPos);
        case BlockType::BLOCK_1_2_14:
            return std::make_unique<Block_1_2_14Block>(gridPos);
        case BlockType::BLOCK_1_2_15:
            return std::make_unique<Block_1_2_15Block>(gridPos);
        case BlockType::BLOCK_1_2_16:
            return std::make_unique<Block_1_2_16Block>(gridPos);
        case BlockType::BLOCK_1_3_4:
            return std::make_unique<Block_1_3_4Block>(gridPos);
        case BlockType::BLOCK_1_3_5:
            return std::make_unique<Block_1_3_5Block>(gridPos);
        case BlockType::BLOCK_1_3_6:
            return std::make_unique<Block_1_3_6Block>(gridPos);
        case BlockType::BLOCK_1_3_7:
            return std::make_unique<Block_1_3_7Block>(gridPos);
        case BlockType::BLOCK_1_3_8:
            return std::make_unique<Block_1_3_8Block>(gridPos);
        case BlockType::BLOCK_1_3_15:
            return std::make_unique<Block_1_3_15Block>(gridPos);
        case BlockType::BLOCK_1_3_16:
            return std::make_unique<Block_1_3_16Block>(gridPos);
        case BlockType::BLOCK_1_4_4:
            return std::make_unique<Block_1_4_4Block>(gridPos);
        case BlockType::BLOCK_1_4_5:
            return std::make_unique<Block_1_4_5Block>(gridPos);
        case BlockType::BLOCK_1_4_6:
            return std::make_unique<Block_1_4_6Block>(gridPos);
        case BlockType::BLOCK_1_4_7:
            return std::make_unique<Block_1_4_7Block>(gridPos);
        case BlockType::BLOCK_1_4_11:
            return std::make_unique<Block_1_4_11Block>(gridPos);
        case BlockType::BLOCK_1_4_12:
            return std::make_unique<Block_1_4_12Block>(gridPos);
        case BlockType::BLOCK_1_4_13:
            return std::make_unique<Block_1_4_13Block>(gridPos);
        case BlockType::BLOCK_1_4_14:
            return std::make_unique<Block_1_4_14Block>(gridPos);
        case BlockType::BLOCK_1_4_15:
            return std::make_unique<Block_1_4_15Block>(gridPos);
        case BlockType::BLOCK_1_4_16:
            return std::make_unique<Block_1_4_16Block>(gridPos);
        case BlockType::BLOCK_1_5_4:
            return std::make_unique<Block_1_5_4Block>(gridPos);
        case BlockType::BLOCK_1_5_5:
            return std::make_unique<Block_1_5_5Block>(gridPos);
        case BlockType::BLOCK_1_5_6:
            return std::make_unique<Block_1_5_6Block>(gridPos);
        case BlockType::BLOCK_1_5_8:
            return std::make_unique<Block_1_5_8Block>(gridPos);
        case BlockType::BLOCK_1_5_9:
            return std::make_unique<Block_1_5_9Block>(gridPos);
        case BlockType::BLOCK_1_5_10:
            return std::make_unique<Block_1_5_10Block>(gridPos);
        case BlockType::BLOCK_1_5_11:
            return std::make_unique<Block_1_5_11Block>(gridPos);
        case BlockType::BLOCK_1_5_12:
            return std::make_unique<Block_1_5_12Block>(gridPos);
        case BlockType::BLOCK_1_5_13:
            return std::make_unique<Block_1_5_13Block>(gridPos);
        case BlockType::BLOCK_1_5_14:
            return std::make_unique<Block_1_5_14Block>(gridPos);
        case BlockType::BLOCK_1_5_15:
            return std::make_unique<Block_1_5_15Block>(gridPos);
        case BlockType::BLOCK_1_5_16:
            return std::make_unique<Block_1_5_16Block>(gridPos);
        case BlockType::BLOCK_1_6_5:
            return std::make_unique<Block_1_6_5Block>(gridPos);
        case BlockType::BLOCK_1_6_6:
            return std::make_unique<Block_1_6_6Block>(gridPos);
        case BlockType::BLOCK_1_7_1:
            return std::make_unique<Block_1_7_1Block>(gridPos);
        case BlockType::BLOCK_1_7_2:
            return std::make_unique<Block_1_7_2Block>(gridPos);
        case BlockType::BLOCK_1_7_3:
            return std::make_unique<Block_1_7_3Block>(gridPos);
        case BlockType::BLOCK_1_7_4:
            return std::make_unique<Block_1_7_4Block>(gridPos);
        case BlockType::BLOCK_1_7_5:
            return std::make_unique<Block_1_7_5Block>(gridPos);
        case BlockType::BLOCK_1_7_6:
            return std::make_unique<Block_1_7_6Block>(gridPos);
        case BlockType::BLOCK_1_7_7:
            return std::make_unique<Block_1_7_7Block>(gridPos);
        case BlockType::BLOCK_1_7_11:
            return std::make_unique<Block_1_7_11Block>(gridPos);
        case BlockType::BLOCK_1_7_12:
            return std::make_unique<Block_1_7_12Block>(gridPos);
        case BlockType::BLOCK_1_7_13:
            return std::make_unique<Block_1_7_13Block>(gridPos);
        case BlockType::BLOCK_1_7_14:
            return std::make_unique<Block_1_7_14Block>(gridPos);
        case BlockType::BLOCK_1_7_15:
            return std::make_unique<Block_1_7_15Block>(gridPos);
        case BlockType::BLOCK_1_7_16:
            return std::make_unique<Block_1_7_16Block>(gridPos);
        case BlockType::BLOCK_1_13_1:
            return std::make_unique<Block_1_13_1Block>(gridPos);
        case BlockType::BLOCK_1_13_2:
            return std::make_unique<Block_1_13_2Block>(gridPos);
        case BlockType::BLOCK_1_13_3:
            return std::make_unique<Block_1_13_3Block>(gridPos);
        case BlockType::BLOCK_1_13_4:
            return std::make_unique<Block_1_13_4Block>(gridPos);
        case BlockType::BLOCK_1_13_5:
            return std::make_unique<Block_1_13_5Block>(gridPos);
        case BlockType::BLOCK_1_13_6:
            return std::make_unique<Block_1_13_6Block>(gridPos);
        case BlockType::BLOCK_1_13_7:
            return std::make_unique<Block_1_13_7Block>(gridPos);
        case BlockType::BLOCK_1_13_8:
            return std::make_unique<Block_1_13_8Block>(gridPos);
        case BlockType::BLOCK_1_13_9:
            return std::make_unique<Block_1_13_9Block>(gridPos);
        case BlockType::BLOCK_1_13_10:
            return std::make_unique<Block_1_13_10Block>(gridPos);
        case BlockType::BLOCK_1_13_11:
            return std::make_unique<Block_1_13_11Block>(gridPos);
        case BlockType::BLOCK_1_13_12:
            return std::make_unique<Block_1_13_12Block>(gridPos);
        case BlockType::BLOCK_1_13_13:
            return std::make_unique<Block_1_13_13Block>(gridPos);
        case BlockType::BLOCK_1_13_14:
            return std::make_unique<Block_1_13_14Block>(gridPos);
        case BlockType::BLOCK_1_13_15:
            return std::make_unique<Block_1_13_15Block>(gridPos);
        case BlockType::BLOCK_1_13_16:
            return std::make_unique<Block_1_13_16Block>(gridPos);
        case BlockType::BLOCK_1_14_1:
            return std::make_unique<Block_1_14_1Block>(gridPos);
        case BlockType::BLOCK_1_14_2:
            return std::make_unique<Block_1_14_2Block>(gridPos);
        case BlockType::BLOCK_1_14_3:
            return std::make_unique<Block_1_14_3Block>(gridPos);
        case BlockType::BLOCK_1_14_4:
            return std::make_unique<Block_1_14_4Block>(gridPos);
        case BlockType::BLOCK_1_14_5:
            return std::make_unique<Block_1_14_5Block>(gridPos);
        case BlockType::BLOCK_1_14_6:
            return std::make_unique<Block_1_14_6Block>(gridPos);
        case BlockType::BLOCK_1_14_7:
            return std::make_unique<Block_1_14_7Block>(gridPos);
        case BlockType::BLOCK_1_14_8:
            return std::make_unique<Block_1_14_8Block>(gridPos);
        case BlockType::BLOCK_1_14_9:
            return std::make_unique<Block_1_14_9Block>(gridPos);
        case BlockType::BLOCK_1_14_10:
            return std::make_unique<Block_1_14_10Block>(gridPos);
        case BlockType::BLOCK_1_14_11:
            return std::make_unique<Block_1_14_11Block>(gridPos);
        case BlockType::BLOCK_1_14_12:
            return std::make_unique<Block_1_14_12Block>(gridPos);
        case BlockType::BLOCK_1_14_13:
            return std::make_unique<Block_1_14_13Block>(gridPos);
        case BlockType::BLOCK_1_14_14:
            return std::make_unique<Block_1_14_14Block>(gridPos);
        case BlockType::BLOCK_1_14_15:
            return std::make_unique<Block_1_14_15Block>(gridPos);
        case BlockType::BLOCK_1_14_16:
            return std::make_unique<Block_1_14_16Block>(gridPos);
        case BlockType::BLOCK_1_15_1:
            return std::make_unique<Block_1_15_1Block>(gridPos);
        case BlockType::BLOCK_1_15_2:
            return std::make_unique<Block_1_15_2Block>(gridPos);
        case BlockType::BLOCK_1_15_3:
            return std::make_unique<Block_1_15_3Block>(gridPos);
        case BlockType::BLOCK_1_15_4:
            return std::make_unique<Block_1_15_4Block>(gridPos);
        case BlockType::BLOCK_1_15_5:
            return std::make_unique<Block_1_15_5Block>(gridPos);
        case BlockType::BLOCK_1_15_6:
            return std::make_unique<Block_1_15_6Block>(gridPos);
        case BlockType::BLOCK_1_15_7:
            return std::make_unique<Block_1_15_7Block>(gridPos);
        case BlockType::BLOCK_1_15_8:
            return std::make_unique<Block_1_15_8Block>(gridPos);
        case BlockType::BLOCK_1_15_9:
            return std::make_unique<Block_1_15_9Block>(gridPos);
        case BlockType::BLOCK_1_15_10:
            return std::make_unique<Block_1_15_10Block>(gridPos);
        case BlockType::BLOCK_1_15_11:
            return std::make_unique<Block_1_15_11Block>(gridPos);
        case BlockType::BLOCK_1_15_12:
            return std::make_unique<Block_1_15_12Block>(gridPos);
        case BlockType::BLOCK_1_15_13:
            return std::make_unique<Block_1_15_13Block>(gridPos);
        case BlockType::BLOCK_1_15_14:
            return std::make_unique<Block_1_15_14Block>(gridPos);
        case BlockType::BLOCK_1_15_15:
            return std::make_unique<Block_1_15_15Block>(gridPos);
        case BlockType::BLOCK_1_15_16:
            return std::make_unique<Block_1_15_16Block>(gridPos);
        case BlockType::BLOCK_1_16_1:
            return std::make_unique<Block_1_16_1Block>(gridPos);
        case BlockType::BLOCK_1_16_2:
            return std::make_unique<Block_1_16_2Block>(gridPos);
        case BlockType::BLOCK_1_16_3:
            return std::make_unique<Block_1_16_3Block>(gridPos);
        case BlockType::BLOCK_1_16_4:
            return std::make_unique<Block_1_16_4Block>(gridPos);
        case BlockType::BLOCK_1_16_5:
            return std::make_unique<Block_1_16_5Block>(gridPos);
        case BlockType::BLOCK_1_16_6:
            return std::make_unique<Block_1_16_6Block>(gridPos);
        case BlockType::BLOCK_1_16_7:
            return std::make_unique<Block_1_16_7Block>(gridPos);
        case BlockType::BLOCK_1_16_8:
            return std::make_unique<Block_1_16_8Block>(gridPos);
        case BlockType::BLOCK_1_16_9:
            return std::make_unique<Block_1_16_9Block>(gridPos);
        case BlockType::BLOCK_1_16_10:
            return std::make_unique<Block_1_16_10Block>(gridPos);
        case BlockType::BLOCK_1_16_11:
            return std::make_unique<Block_1_16_11Block>(gridPos);
        case BlockType::BLOCK_1_16_12:
            return std::make_unique<Block_1_16_12Block>(gridPos);
        case BlockType::BLOCK_1_16_13:
            return std::make_unique<Block_1_16_13Block>(gridPos);
        case BlockType::BLOCK_1_16_14:
            return std::make_unique<Block_1_16_14Block>(gridPos);
        case BlockType::BLOCK_1_16_15:
            return std::make_unique<Block_1_16_15Block>(gridPos);
        case BlockType::BLOCK_1_16_16:






        case BlockType::BLOCK_2_1_2:
            return std::make_unique<Block_2_1_2Block>(gridPos);
        case BlockType::BLOCK_2_1_3:
            return std::make_unique<Block_2_1_3Block>(gridPos);
        case BlockType::BLOCK_2_1_12:
            return std::make_unique<Block_2_1_12Block>(gridPos);
        case BlockType::BLOCK_2_1_13:
            return std::make_unique<Block_2_1_13Block>(gridPos);
        case BlockType::BLOCK_2_1_14:
            return std::make_unique<Block_2_1_14Block>(gridPos);
        case BlockType::BLOCK_2_1_15:
            return std::make_unique<Block_2_1_15Block>(gridPos);
        case BlockType::BLOCK_2_1_16:
            return std::make_unique<Block_2_1_16Block>(gridPos);
        case BlockType::BLOCK_2_2_7:
            return std::make_unique<Block_2_2_7Block>(gridPos);
        case BlockType::BLOCK_2_2_8:
            return std::make_unique<Block_2_2_8Block>(gridPos);
        case BlockType::BLOCK_2_2_12:
            return std::make_unique<Block_2_2_12Block>(gridPos);
        case BlockType::BLOCK_2_2_13:
            return std::make_unique<Block_2_2_13Block>(gridPos);
        case BlockType::BLOCK_2_2_14:
            return std::make_unique<Block_2_2_14Block>(gridPos);
        case BlockType::BLOCK_2_2_15:
            return std::make_unique<Block_2_2_15Block>(gridPos);
        case BlockType::BLOCK_2_2_16:
            return std::make_unique<Block_2_2_16Block>(gridPos);
        case BlockType::BLOCK_2_3_4:
            return std::make_unique<Block_2_3_4Block>(gridPos);
        case BlockType::BLOCK_2_3_5:
            return std::make_unique<Block_2_3_5Block>(gridPos);
        case BlockType::BLOCK_2_3_6:
            return std::make_unique<Block_2_3_6Block>(gridPos);
        case BlockType::BLOCK_2_3_7:
            return std::make_unique<Block_2_3_7Block>(gridPos);
        case BlockType::BLOCK_2_3_8:
            return std::make_unique<Block_2_3_8Block>(gridPos);
        case BlockType::BLOCK_2_3_15:
            return std::make_unique<Block_2_3_15Block>(gridPos);
        case BlockType::BLOCK_2_3_16:
            return std::make_unique<Block_2_3_16Block>(gridPos);
        case BlockType::BLOCK_2_4_4:
            return std::make_unique<Block_2_4_4Block>(gridPos);
        case BlockType::BLOCK_2_4_5:
            return std::make_unique<Block_2_4_5Block>(gridPos);
        case BlockType::BLOCK_2_4_6:
            return std::make_unique<Block_2_4_6Block>(gridPos);
        case BlockType::BLOCK_2_4_7:
            return std::make_unique<Block_2_4_7Block>(gridPos);
        case BlockType::BLOCK_2_4_11:
            return std::make_unique<Block_2_4_11Block>(gridPos);
        case BlockType::BLOCK_2_4_12:
            return std::make_unique<Block_2_4_12Block>(gridPos);
        case BlockType::BLOCK_2_4_13:
            return std::make_unique<Block_2_4_13Block>(gridPos);
        case BlockType::BLOCK_2_4_14:
            return std::make_unique<Block_2_4_14Block>(gridPos);
        case BlockType::BLOCK_2_4_15:
            return std::make_unique<Block_2_4_15Block>(gridPos);
        case BlockType::BLOCK_2_4_16:
            return std::make_unique<Block_2_4_16Block>(gridPos);
        case BlockType::BLOCK_2_5_4:
            return std::make_unique<Block_2_5_4Block>(gridPos);
        case BlockType::BLOCK_2_5_5:
            return std::make_unique<Block_2_5_5Block>(gridPos);
        case BlockType::BLOCK_2_5_6:
            return std::make_unique<Block_2_5_6Block>(gridPos);
        case BlockType::BLOCK_2_5_8:
            return std::make_unique<Block_2_5_8Block>(gridPos);
        case BlockType::BLOCK_2_5_9:
            return std::make_unique<Block_2_5_9Block>(gridPos);
        case BlockType::BLOCK_2_5_10:
            return std::make_unique<Block_2_5_10Block>(gridPos);
        case BlockType::BLOCK_2_5_11:
            return std::make_unique<Block_2_5_11Block>(gridPos);
        case BlockType::BLOCK_2_5_12:
            return std::make_unique<Block_2_5_12Block>(gridPos);
        case BlockType::BLOCK_2_5_13:
            return std::make_unique<Block_2_5_13Block>(gridPos);
        case BlockType::BLOCK_2_5_14:
            return std::make_unique<Block_2_5_14Block>(gridPos);
        case BlockType::BLOCK_2_5_15:
            return std::make_unique<Block_2_5_15Block>(gridPos);
        case BlockType::BLOCK_2_5_16:
            return std::make_unique<Block_2_5_16Block>(gridPos);
        case BlockType::BLOCK_2_6_5:
            return std::make_unique<Block_2_6_5Block>(gridPos);
        case BlockType::BLOCK_2_6_6:
            return std::make_unique<Block_2_6_6Block>(gridPos);
        case BlockType::BLOCK_2_7_1:
            return std::make_unique<Block_2_7_1Block>(gridPos);
        case BlockType::BLOCK_2_7_2:
            return std::make_unique<Block_2_7_2Block>(gridPos);
        case BlockType::BLOCK_2_7_3:
            return std::make_unique<Block_2_7_3Block>(gridPos);
        case BlockType::BLOCK_2_7_4:
            return std::make_unique<Block_2_7_4Block>(gridPos);
        case BlockType::BLOCK_2_7_5:
            return std::make_unique<Block_2_7_5Block>(gridPos);
        case BlockType::BLOCK_2_7_6:
            return std::make_unique<Block_2_7_6Block>(gridPos);
        case BlockType::BLOCK_2_7_7:
            return std::make_unique<Block_2_7_7Block>(gridPos);
        case BlockType::BLOCK_2_7_11:
            return std::make_unique<Block_2_7_11Block>(gridPos);
        case BlockType::BLOCK_2_7_12:
            return std::make_unique<Block_2_7_12Block>(gridPos);
        case BlockType::BLOCK_2_7_13:
            return std::make_unique<Block_2_7_13Block>(gridPos);
        case BlockType::BLOCK_2_7_14:
            return std::make_unique<Block_2_7_14Block>(gridPos);
        case BlockType::BLOCK_2_7_15:
            return std::make_unique<Block_2_7_15Block>(gridPos);
        case BlockType::BLOCK_2_7_16:
            return std::make_unique<Block_2_7_16Block>(gridPos);
        case BlockType::BLOCK_2_13_1:
            return std::make_unique<Block_2_13_1Block>(gridPos);
        case BlockType::BLOCK_2_13_2:
            return std::make_unique<Block_2_13_2Block>(gridPos);
        case BlockType::BLOCK_2_13_3:
            return std::make_unique<Block_2_13_3Block>(gridPos);
        case BlockType::BLOCK_2_13_4:
            return std::make_unique<Block_2_13_4Block>(gridPos);
        case BlockType::BLOCK_2_13_5:
            return std::make_unique<Block_2_13_5Block>(gridPos);
        case BlockType::BLOCK_2_13_6:
            return std::make_unique<Block_2_13_6Block>(gridPos);
        case BlockType::BLOCK_2_13_7:
            return std::make_unique<Block_2_13_7Block>(gridPos);
        case BlockType::BLOCK_2_13_8:
            return std::make_unique<Block_2_13_8Block>(gridPos);
        case BlockType::BLOCK_2_13_9:
            return std::make_unique<Block_2_13_9Block>(gridPos);
        case BlockType::BLOCK_2_13_10:
            return std::make_unique<Block_2_13_10Block>(gridPos);
        case BlockType::BLOCK_2_13_11:
            return std::make_unique<Block_2_13_11Block>(gridPos);
        case BlockType::BLOCK_2_13_12:
            return std::make_unique<Block_2_13_12Block>(gridPos);
        case BlockType::BLOCK_2_13_13:
            return std::make_unique<Block_2_13_13Block>(gridPos);
        case BlockType::BLOCK_2_13_14:
            return std::make_unique<Block_2_13_14Block>(gridPos);
        case BlockType::BLOCK_2_13_15:
            return std::make_unique<Block_2_13_15Block>(gridPos);
        case BlockType::BLOCK_2_13_16:
            return std::make_unique<Block_2_13_16Block>(gridPos);
        case BlockType::BLOCK_2_14_1:
            return std::make_unique<Block_2_14_1Block>(gridPos);
        case BlockType::BLOCK_2_14_2:
            return std::make_unique<Block_2_14_2Block>(gridPos);
        case BlockType::BLOCK_2_14_3:
            return std::make_unique<Block_2_14_3Block>(gridPos);
        case BlockType::BLOCK_2_14_4:
            return std::make_unique<Block_2_14_4Block>(gridPos);
        case BlockType::BLOCK_2_14_5:
            return std::make_unique<Block_2_14_5Block>(gridPos);
        case BlockType::BLOCK_2_14_6:
            return std::make_unique<Block_2_14_6Block>(gridPos);
        case BlockType::BLOCK_2_14_7:
            return std::make_unique<Block_2_14_7Block>(gridPos);
        case BlockType::BLOCK_2_14_8:
            return std::make_unique<Block_2_14_8Block>(gridPos);
        case BlockType::BLOCK_2_14_9:
            return std::make_unique<Block_2_14_9Block>(gridPos);
        case BlockType::BLOCK_2_14_10:
            return std::make_unique<Block_2_14_10Block>(gridPos);
        case BlockType::BLOCK_2_14_11:
            return std::make_unique<Block_2_14_11Block>(gridPos);
        case BlockType::BLOCK_2_14_12:
            return std::make_unique<Block_2_14_12Block>(gridPos);
        case BlockType::BLOCK_2_14_13:
            return std::make_unique<Block_2_14_13Block>(gridPos);
        case BlockType::BLOCK_2_14_14:
            return std::make_unique<Block_2_14_14Block>(gridPos);
        case BlockType::BLOCK_2_14_15:
            return std::make_unique<Block_2_14_15Block>(gridPos);
        case BlockType::BLOCK_2_14_16:
            return std::make_unique<Block_2_14_16Block>(gridPos);
        case BlockType::BLOCK_2_15_1:
            return std::make_unique<Block_2_15_1Block>(gridPos);
        case BlockType::BLOCK_2_15_2:
            return std::make_unique<Block_2_15_2Block>(gridPos);
        case BlockType::BLOCK_2_15_3:
            return std::make_unique<Block_2_15_3Block>(gridPos);
        case BlockType::BLOCK_2_15_4:
            return std::make_unique<Block_2_15_4Block>(gridPos);
        case BlockType::BLOCK_2_15_5:
            return std::make_unique<Block_2_15_5Block>(gridPos);
        case BlockType::BLOCK_2_15_6:
            return std::make_unique<Block_2_15_6Block>(gridPos);
        case BlockType::BLOCK_2_15_7:
            return std::make_unique<Block_2_15_7Block>(gridPos);
        case BlockType::BLOCK_2_15_8:
            return std::make_unique<Block_2_15_8Block>(gridPos);
        case BlockType::BLOCK_2_15_9:
            return std::make_unique<Block_2_15_9Block>(gridPos);
        case BlockType::BLOCK_2_15_10:
            return std::make_unique<Block_2_15_10Block>(gridPos);
        case BlockType::BLOCK_2_15_11:
            return std::make_unique<Block_2_15_11Block>(gridPos);
        case BlockType::BLOCK_2_15_12:
            return std::make_unique<Block_2_15_12Block>(gridPos);
        case BlockType::BLOCK_2_15_13:
            return std::make_unique<Block_2_15_13Block>(gridPos);
        case BlockType::BLOCK_2_15_14:
            return std::make_unique<Block_2_15_14Block>(gridPos);
        case BlockType::BLOCK_2_15_15:
            return std::make_unique<Block_2_15_15Block>(gridPos);
        case BlockType::BLOCK_2_15_16:
            return std::make_unique<Block_2_15_16Block>(gridPos);
        case BlockType::BLOCK_2_16_1:
            return std::make_unique<Block_2_16_1Block>(gridPos);
        case BlockType::BLOCK_2_16_2:
            return std::make_unique<Block_2_16_2Block>(gridPos);
        case BlockType::BLOCK_2_16_3:
            return std::make_unique<Block_2_16_3Block>(gridPos);
        case BlockType::BLOCK_2_16_4:
            return std::make_unique<Block_2_16_4Block>(gridPos);
        case BlockType::BLOCK_2_16_5:
            return std::make_unique<Block_2_16_5Block>(gridPos);
        case BlockType::BLOCK_2_16_6:
            return std::make_unique<Block_2_16_6Block>(gridPos);
        case BlockType::BLOCK_2_16_7:
            return std::make_unique<Block_2_16_7Block>(gridPos);
        case BlockType::BLOCK_2_16_8:
            return std::make_unique<Block_2_16_8Block>(gridPos);
        case BlockType::BLOCK_2_16_9:
            return std::make_unique<Block_2_16_9Block>(gridPos);
        case BlockType::BLOCK_2_16_10:
            return std::make_unique<Block_2_16_10Block>(gridPos);
        case BlockType::BLOCK_2_16_11:
            return std::make_unique<Block_2_16_11Block>(gridPos);
        case BlockType::BLOCK_2_16_12:
            return std::make_unique<Block_2_16_12Block>(gridPos);
        case BlockType::BLOCK_2_16_13:
            return std::make_unique<Block_2_16_13Block>(gridPos);
        case BlockType::BLOCK_2_16_14:
            return std::make_unique<Block_2_16_14Block>(gridPos);
        case BlockType::BLOCK_2_16_15:
            return std::make_unique<Block_2_16_15Block>(gridPos);
        case BlockType::BLOCK_2_16_16:
            return std::make_unique<Block_2_16_16Block>(gridPos);






        case BlockType::BLOCK_3_1_2:
            return std::make_unique<Block_3_1_2Block>(gridPos);
        case BlockType::BLOCK_3_1_3:
            return std::make_unique<Block_3_1_3Block>(gridPos);
        case BlockType::BLOCK_3_1_12:
            return std::make_unique<Block_3_1_12Block>(gridPos);
        case BlockType::BLOCK_3_1_13:
            return std::make_unique<Block_3_1_13Block>(gridPos);
        case BlockType::BLOCK_3_1_14:
            return std::make_unique<Block_3_1_14Block>(gridPos);
        case BlockType::BLOCK_3_1_15:
            return std::make_unique<Block_3_1_15Block>(gridPos);
        case BlockType::BLOCK_3_1_16:
            return std::make_unique<Block_3_1_16Block>(gridPos);
        case BlockType::BLOCK_3_2_7:
            return std::make_unique<Block_3_2_7Block>(gridPos);
        case BlockType::BLOCK_3_2_8:
            return std::make_unique<Block_3_2_8Block>(gridPos);
        case BlockType::BLOCK_3_2_12:
            return std::make_unique<Block_3_2_12Block>(gridPos);
        case BlockType::BLOCK_3_2_13:
            return std::make_unique<Block_3_2_13Block>(gridPos);
        case BlockType::BLOCK_3_2_14:
            return std::make_unique<Block_3_2_14Block>(gridPos);
        case BlockType::BLOCK_3_2_15:
            return std::make_unique<Block_3_2_15Block>(gridPos);
        case BlockType::BLOCK_3_2_16:
            return std::make_unique<Block_3_2_16Block>(gridPos);
        case BlockType::BLOCK_3_3_4:
            return std::make_unique<Block_3_3_4Block>(gridPos);
        case BlockType::BLOCK_3_3_5:
            return std::make_unique<Block_3_3_5Block>(gridPos);
        case BlockType::BLOCK_3_3_6:
            return std::make_unique<Block_3_3_6Block>(gridPos);
        case BlockType::BLOCK_3_3_7:
            return std::make_unique<Block_3_3_7Block>(gridPos);
        case BlockType::BLOCK_3_3_8:
            return std::make_unique<Block_3_3_8Block>(gridPos);
        case BlockType::BLOCK_3_3_15:
            return std::make_unique<Block_3_3_15Block>(gridPos);
        case BlockType::BLOCK_3_3_16:
            return std::make_unique<Block_3_3_16Block>(gridPos);
        case BlockType::BLOCK_3_4_4:
            return std::make_unique<Block_3_4_4Block>(gridPos);
        case BlockType::BLOCK_3_4_5:
            return std::make_unique<Block_3_4_5Block>(gridPos);
        case BlockType::BLOCK_3_4_6:
            return std::make_unique<Block_3_4_6Block>(gridPos);
        case BlockType::BLOCK_3_4_7:
            return std::make_unique<Block_3_4_7Block>(gridPos);
        case BlockType::BLOCK_3_4_11:
            return std::make_unique<Block_3_4_11Block>(gridPos);
        case BlockType::BLOCK_3_4_12:
            return std::make_unique<Block_3_4_12Block>(gridPos);
        case BlockType::BLOCK_3_4_13:
            return std::make_unique<Block_3_4_13Block>(gridPos);
        case BlockType::BLOCK_3_4_14:
            return std::make_unique<Block_3_4_14Block>(gridPos);
        case BlockType::BLOCK_3_4_15:
            return std::make_unique<Block_3_4_15Block>(gridPos);
        case BlockType::BLOCK_3_4_16:
            return std::make_unique<Block_3_4_16Block>(gridPos);
        case BlockType::BLOCK_3_5_4:
            return std::make_unique<Block_3_5_4Block>(gridPos);
        case BlockType::BLOCK_3_5_5:
            return std::make_unique<Block_3_5_5Block>(gridPos);
        case BlockType::BLOCK_3_5_6:
            return std::make_unique<Block_3_5_6Block>(gridPos);
        case BlockType::BLOCK_3_5_8:
            return std::make_unique<Block_3_5_8Block>(gridPos);
        case BlockType::BLOCK_3_5_9:
            return std::make_unique<Block_3_5_9Block>(gridPos);
        case BlockType::BLOCK_3_5_10:
            return std::make_unique<Block_3_5_10Block>(gridPos);
        case BlockType::BLOCK_3_5_11:
            return std::make_unique<Block_3_5_11Block>(gridPos);
        case BlockType::BLOCK_3_5_12:
            return std::make_unique<Block_3_5_12Block>(gridPos);
        case BlockType::BLOCK_3_5_13:
            return std::make_unique<Block_3_5_13Block>(gridPos);
        case BlockType::BLOCK_3_5_14:
            return std::make_unique<Block_3_5_14Block>(gridPos);
        case BlockType::BLOCK_3_5_15:
            return std::make_unique<Block_3_5_15Block>(gridPos);
        case BlockType::BLOCK_3_5_16:
            return std::make_unique<Block_3_5_16Block>(gridPos);
        case BlockType::BLOCK_3_6_5:
            return std::make_unique<Block_3_6_5Block>(gridPos);
        case BlockType::BLOCK_3_6_6:
            return std::make_unique<Block_3_6_6Block>(gridPos);
        case BlockType::BLOCK_3_7_1:
            return std::make_unique<Block_3_7_1Block>(gridPos);
        case BlockType::BLOCK_3_7_2:
            return std::make_unique<Block_3_7_2Block>(gridPos);
        case BlockType::BLOCK_3_7_3:
            return std::make_unique<Block_3_7_3Block>(gridPos);
        case BlockType::BLOCK_3_7_4:
            return std::make_unique<Block_3_7_4Block>(gridPos);
        case BlockType::BLOCK_3_7_5:
            return std::make_unique<Block_3_7_5Block>(gridPos);
        case BlockType::BLOCK_3_7_6:
            return std::make_unique<Block_3_7_6Block>(gridPos);
        case BlockType::BLOCK_3_7_7:
            return std::make_unique<Block_3_7_7Block>(gridPos);
        case BlockType::BLOCK_3_7_11:
            return std::make_unique<Block_3_7_11Block>(gridPos);
        case BlockType::BLOCK_3_7_12:
            return std::make_unique<Block_3_7_12Block>(gridPos);
        case BlockType::BLOCK_3_7_13:
            return std::make_unique<Block_3_7_13Block>(gridPos);
        case BlockType::BLOCK_3_7_14:
            return std::make_unique<Block_3_7_14Block>(gridPos);
        case BlockType::BLOCK_3_7_15:
            return std::make_unique<Block_3_7_15Block>(gridPos);
        case BlockType::BLOCK_3_7_16:
            return std::make_unique<Block_3_7_16Block>(gridPos);
        case BlockType::BLOCK_3_13_1:
            return std::make_unique<Block_3_13_1Block>(gridPos);
        case BlockType::BLOCK_3_13_2:
            return std::make_unique<Block_3_13_2Block>(gridPos);
        case BlockType::BLOCK_3_13_3:
            return std::make_unique<Block_3_13_3Block>(gridPos);
        case BlockType::BLOCK_3_13_4:
            return std::make_unique<Block_3_13_4Block>(gridPos);
        case BlockType::BLOCK_3_13_5:
            return std::make_unique<Block_3_13_5Block>(gridPos);
        case BlockType::BLOCK_3_13_6:
            return std::make_unique<Block_3_13_6Block>(gridPos);
        case BlockType::BLOCK_3_13_7:
            return std::make_unique<Block_3_13_7Block>(gridPos);
        case BlockType::BLOCK_3_13_8:
            return std::make_unique<Block_3_13_8Block>(gridPos);
        case BlockType::BLOCK_3_13_9:
            return std::make_unique<Block_3_13_9Block>(gridPos);
        case BlockType::BLOCK_3_13_10:
            return std::make_unique<Block_3_13_10Block>(gridPos);
        case BlockType::BLOCK_3_13_11:
            return std::make_unique<Block_3_13_11Block>(gridPos);
        case BlockType::BLOCK_3_13_12:
            return std::make_unique<Block_3_13_12Block>(gridPos);
        case BlockType::BLOCK_3_13_13:
            return std::make_unique<Block_3_13_13Block>(gridPos);
        case BlockType::BLOCK_3_13_14:
            return std::make_unique<Block_3_13_14Block>(gridPos);
        case BlockType::BLOCK_3_13_15:
            return std::make_unique<Block_3_13_15Block>(gridPos);
        case BlockType::BLOCK_3_13_16:
            return std::make_unique<Block_3_13_16Block>(gridPos);
        case BlockType::BLOCK_3_14_1:
            return std::make_unique<Block_3_14_1Block>(gridPos);
        case BlockType::BLOCK_3_14_2:
            return std::make_unique<Block_3_14_2Block>(gridPos);
        case BlockType::BLOCK_3_14_3:
            return std::make_unique<Block_3_14_3Block>(gridPos);
        case BlockType::BLOCK_3_14_4:
            return std::make_unique<Block_3_14_4Block>(gridPos);
        case BlockType::BLOCK_3_14_5:
            return std::make_unique<Block_3_14_5Block>(gridPos);
        case BlockType::BLOCK_3_14_6:
            return std::make_unique<Block_3_14_6Block>(gridPos);
        case BlockType::BLOCK_3_14_7:
            return std::make_unique<Block_3_14_7Block>(gridPos);
        case BlockType::BLOCK_3_14_8:
            return std::make_unique<Block_3_14_8Block>(gridPos);
        case BlockType::BLOCK_3_14_9:
            return std::make_unique<Block_3_14_9Block>(gridPos);
        case BlockType::BLOCK_3_14_10:
            return std::make_unique<Block_3_14_10Block>(gridPos);
        case BlockType::BLOCK_3_14_11:
            return std::make_unique<Block_3_14_11Block>(gridPos);
        case BlockType::BLOCK_3_14_12:
            return std::make_unique<Block_3_14_12Block>(gridPos);
        case BlockType::BLOCK_3_14_13:
            return std::make_unique<Block_3_14_13Block>(gridPos);
        case BlockType::BLOCK_3_14_14:
            return std::make_unique<Block_3_14_14Block>(gridPos);
        case BlockType::BLOCK_3_14_15:
            return std::make_unique<Block_3_14_15Block>(gridPos);
        case BlockType::BLOCK_3_14_16:
            return std::make_unique<Block_3_14_16Block>(gridPos);
        case BlockType::BLOCK_3_15_1:
            return std::make_unique<Block_3_15_1Block>(gridPos);
        case BlockType::BLOCK_3_15_2:
            return std::make_unique<Block_3_15_2Block>(gridPos);
        case BlockType::BLOCK_3_15_3:
            return std::make_unique<Block_3_15_3Block>(gridPos);
        case BlockType::BLOCK_3_15_4:
            return std::make_unique<Block_3_15_4Block>(gridPos);
        case BlockType::BLOCK_3_15_5:
            return std::make_unique<Block_3_15_5Block>(gridPos);
        case BlockType::BLOCK_3_15_6:
            return std::make_unique<Block_3_15_6Block>(gridPos);
        case BlockType::BLOCK_3_15_7:
            return std::make_unique<Block_3_15_7Block>(gridPos);
        case BlockType::BLOCK_3_15_8:
            return std::make_unique<Block_3_15_8Block>(gridPos);
        case BlockType::BLOCK_3_15_9:
            return std::make_unique<Block_3_15_9Block>(gridPos);
        case BlockType::BLOCK_3_15_10:
            return std::make_unique<Block_3_15_10Block>(gridPos);
        case BlockType::BLOCK_3_15_11:
            return std::make_unique<Block_3_15_11Block>(gridPos);
        case BlockType::BLOCK_3_15_12:
            return std::make_unique<Block_3_15_12Block>(gridPos);
        case BlockType::BLOCK_3_15_13:
            return std::make_unique<Block_3_15_13Block>(gridPos);
        case BlockType::BLOCK_3_15_14:
            return std::make_unique<Block_3_15_14Block>(gridPos);
        case BlockType::BLOCK_3_15_15:
            return std::make_unique<Block_3_15_15Block>(gridPos);
        case BlockType::BLOCK_3_15_16:
            return std::make_unique<Block_3_15_16Block>(gridPos);
        case BlockType::BLOCK_3_16_1:
            return std::make_unique<Block_3_16_1Block>(gridPos);
        case BlockType::BLOCK_3_16_2:
            return std::make_unique<Block_3_16_2Block>(gridPos);
        case BlockType::BLOCK_3_16_3:
            return std::make_unique<Block_3_16_3Block>(gridPos);
        case BlockType::BLOCK_3_16_4:
            return std::make_unique<Block_3_16_4Block>(gridPos);
        case BlockType::BLOCK_3_16_5:
            return std::make_unique<Block_3_16_5Block>(gridPos);
        case BlockType::BLOCK_3_16_6:
            return std::make_unique<Block_3_16_6Block>(gridPos);
        case BlockType::BLOCK_3_16_7:
            return std::make_unique<Block_3_16_7Block>(gridPos);
        case BlockType::BLOCK_3_16_8:
            return std::make_unique<Block_3_16_8Block>(gridPos);
        case BlockType::BLOCK_3_16_9:
            return std::make_unique<Block_3_16_9Block>(gridPos);
        case BlockType::BLOCK_3_16_10:
            return std::make_unique<Block_3_16_10Block>(gridPos);
        case BlockType::BLOCK_3_16_11:
            return std::make_unique<Block_3_16_11Block>(gridPos);
        case BlockType::BLOCK_3_16_12:
            return std::make_unique<Block_3_16_12Block>(gridPos);
        case BlockType::BLOCK_3_16_13:
            return std::make_unique<Block_3_16_13Block>(gridPos);
        case BlockType::BLOCK_3_16_14:
            return std::make_unique<Block_3_16_14Block>(gridPos);
        case BlockType::BLOCK_3_16_15:
            return std::make_unique<Block_3_16_15Block>(gridPos);
        case BlockType::BLOCK_3_16_16:
            return std::make_unique<Block_3_16_16Block>(gridPos);






        case BlockType::BLOCK_4_1_2:
            return std::make_unique<Block_4_1_2Block>(gridPos);
        case BlockType::BLOCK_4_1_3:
            return std::make_unique<Block_4_1_3Block>(gridPos);
        case BlockType::BLOCK_4_1_12:
            return std::make_unique<Block_4_1_12Block>(gridPos);
        case BlockType::BLOCK_4_1_13:
            return std::make_unique<Block_4_1_13Block>(gridPos);
        case BlockType::BLOCK_4_1_14:
            return std::make_unique<Block_4_1_14Block>(gridPos);
        case BlockType::BLOCK_4_1_15:
            return std::make_unique<Block_4_1_15Block>(gridPos);
        case BlockType::BLOCK_4_1_16:
            return std::make_unique<Block_4_1_16Block>(gridPos);
        case BlockType::BLOCK_4_2_7:
            return std::make_unique<Block_4_2_7Block>(gridPos);
        case BlockType::BLOCK_4_2_8:
            return std::make_unique<Block_4_2_8Block>(gridPos);
        case BlockType::BLOCK_4_2_12:
            return std::make_unique<Block_4_2_12Block>(gridPos);
        case BlockType::BLOCK_4_2_13:
            return std::make_unique<Block_4_2_13Block>(gridPos);
        case BlockType::BLOCK_4_2_14:
            return std::make_unique<Block_4_2_14Block>(gridPos);
        case BlockType::BLOCK_4_2_15:
            return std::make_unique<Block_4_2_15Block>(gridPos);
        case BlockType::BLOCK_4_2_16:
            return std::make_unique<Block_4_2_16Block>(gridPos);
        case BlockType::BLOCK_4_3_4:
            return std::make_unique<Block_4_3_4Block>(gridPos);
        case BlockType::BLOCK_4_3_5:
            return std::make_unique<Block_4_3_5Block>(gridPos);
        case BlockType::BLOCK_4_3_6:
            return std::make_unique<Block_4_3_6Block>(gridPos);
        case BlockType::BLOCK_4_3_7:
            return std::make_unique<Block_4_3_7Block>(gridPos);
        case BlockType::BLOCK_4_3_8:
            return std::make_unique<Block_4_3_8Block>(gridPos);
        case BlockType::BLOCK_4_3_15:
            return std::make_unique<Block_4_3_15Block>(gridPos);
        case BlockType::BLOCK_4_3_16:
            return std::make_unique<Block_4_3_16Block>(gridPos);
        case BlockType::BLOCK_4_4_4:
            return std::make_unique<Block_4_4_4Block>(gridPos);
        case BlockType::BLOCK_4_4_5:
            return std::make_unique<Block_4_4_5Block>(gridPos);
        case BlockType::BLOCK_4_4_6:
            return std::make_unique<Block_4_4_6Block>(gridPos);
        case BlockType::BLOCK_4_4_7:
            return std::make_unique<Block_4_4_7Block>(gridPos);
        case BlockType::BLOCK_4_4_11:
            return std::make_unique<Block_4_4_11Block>(gridPos);
        case BlockType::BLOCK_4_4_12:
            return std::make_unique<Block_4_4_12Block>(gridPos);
        case BlockType::BLOCK_4_4_13:
            return std::make_unique<Block_4_4_13Block>(gridPos);
        case BlockType::BLOCK_4_4_14:
            return std::make_unique<Block_4_4_14Block>(gridPos);
        case BlockType::BLOCK_4_4_15:
            return std::make_unique<Block_4_4_15Block>(gridPos);
        case BlockType::BLOCK_4_4_16:
            return std::make_unique<Block_4_4_16Block>(gridPos);
        case BlockType::BLOCK_4_5_4:
            return std::make_unique<Block_4_5_4Block>(gridPos);
        case BlockType::BLOCK_4_5_5:
            return std::make_unique<Block_4_5_5Block>(gridPos);
        case BlockType::BLOCK_4_5_6:
            return std::make_unique<Block_4_5_6Block>(gridPos);
        case BlockType::BLOCK_4_5_8:
            return std::make_unique<Block_4_5_8Block>(gridPos);
        case BlockType::BLOCK_4_5_9:
            return std::make_unique<Block_4_5_9Block>(gridPos);
        case BlockType::BLOCK_4_5_10:
            return std::make_unique<Block_4_5_10Block>(gridPos);
        case BlockType::BLOCK_4_5_11:
            return std::make_unique<Block_4_5_11Block>(gridPos);
        case BlockType::BLOCK_4_5_12:
            return std::make_unique<Block_4_5_12Block>(gridPos);
        case BlockType::BLOCK_4_5_13:
            return std::make_unique<Block_4_5_13Block>(gridPos);
        case BlockType::BLOCK_4_5_14:
            return std::make_unique<Block_4_5_14Block>(gridPos);
        case BlockType::BLOCK_4_5_15:
            return std::make_unique<Block_4_5_15Block>(gridPos);
        case BlockType::BLOCK_4_5_16:
            return std::make_unique<Block_4_5_16Block>(gridPos);
        case BlockType::BLOCK_4_6_5:
            return std::make_unique<Block_4_6_5Block>(gridPos);
        case BlockType::BLOCK_4_6_6:
            return std::make_unique<Block_4_6_6Block>(gridPos);
        case BlockType::BLOCK_4_7_1:
            return std::make_unique<Block_4_7_1Block>(gridPos);
        case BlockType::BLOCK_4_7_2:
            return std::make_unique<Block_4_7_2Block>(gridPos);
        case BlockType::BLOCK_4_7_3:
            return std::make_unique<Block_4_7_3Block>(gridPos);
        case BlockType::BLOCK_4_7_4:
            return std::make_unique<Block_4_7_4Block>(gridPos);
        case BlockType::BLOCK_4_7_5:
            return std::make_unique<Block_4_7_5Block>(gridPos);
        case BlockType::BLOCK_4_7_6:
            return std::make_unique<Block_4_7_6Block>(gridPos);
        case BlockType::BLOCK_4_7_7:
            return std::make_unique<Block_4_7_7Block>(gridPos);
        case BlockType::BLOCK_4_7_11:
            return std::make_unique<Block_4_7_11Block>(gridPos);
        case BlockType::BLOCK_4_7_12:
            return std::make_unique<Block_4_7_12Block>(gridPos);
        case BlockType::BLOCK_4_7_13:
            return std::make_unique<Block_4_7_13Block>(gridPos);
        case BlockType::BLOCK_4_7_14:
            return std::make_unique<Block_4_7_14Block>(gridPos);
        case BlockType::BLOCK_4_7_15:
            return std::make_unique<Block_4_7_15Block>(gridPos);
        case BlockType::BLOCK_4_7_16:
            return std::make_unique<Block_4_7_16Block>(gridPos);
        case BlockType::BLOCK_4_13_1:
            return std::make_unique<Block_4_13_1Block>(gridPos);
        case BlockType::BLOCK_4_13_2:
            return std::make_unique<Block_4_13_2Block>(gridPos);
        case BlockType::BLOCK_4_13_3:
            return std::make_unique<Block_4_13_3Block>(gridPos);
        case BlockType::BLOCK_4_13_4:
            return std::make_unique<Block_4_13_4Block>(gridPos);
        case BlockType::BLOCK_4_13_5:
            return std::make_unique<Block_4_13_5Block>(gridPos);
        case BlockType::BLOCK_4_13_6:
            return std::make_unique<Block_4_13_6Block>(gridPos);
        case BlockType::BLOCK_4_13_7:
            return std::make_unique<Block_4_13_7Block>(gridPos);
        case BlockType::BLOCK_4_13_8:
            return std::make_unique<Block_4_13_8Block>(gridPos);
        case BlockType::BLOCK_4_13_9:
            return std::make_unique<Block_4_13_9Block>(gridPos);
        case BlockType::BLOCK_4_13_10:
            return std::make_unique<Block_4_13_10Block>(gridPos);
        case BlockType::BLOCK_4_13_11:
            return std::make_unique<Block_4_13_11Block>(gridPos);
        case BlockType::BLOCK_4_13_12:
            return std::make_unique<Block_4_13_12Block>(gridPos);
        case BlockType::BLOCK_4_13_13:
            return std::make_unique<Block_4_13_13Block>(gridPos);
        case BlockType::BLOCK_4_13_14:
            return std::make_unique<Block_4_13_14Block>(gridPos);
        case BlockType::BLOCK_4_13_15:
            return std::make_unique<Block_4_13_15Block>(gridPos);
        case BlockType::BLOCK_4_13_16:
            return std::make_unique<Block_4_13_16Block>(gridPos);
        case BlockType::BLOCK_4_14_1:
            return std::make_unique<Block_4_14_1Block>(gridPos);
        case BlockType::BLOCK_4_14_2:
            return std::make_unique<Block_4_14_2Block>(gridPos);
        case BlockType::BLOCK_4_14_3:
            return std::make_unique<Block_4_14_3Block>(gridPos);
        case BlockType::BLOCK_4_14_4:
            return std::make_unique<Block_4_14_4Block>(gridPos);
        case BlockType::BLOCK_4_14_5:
            return std::make_unique<Block_4_14_5Block>(gridPos);
        case BlockType::BLOCK_4_14_6:
            return std::make_unique<Block_4_14_6Block>(gridPos);
        case BlockType::BLOCK_4_14_7:
            return std::make_unique<Block_4_14_7Block>(gridPos);
        case BlockType::BLOCK_4_14_8:
            return std::make_unique<Block_4_14_8Block>(gridPos);
        case BlockType::BLOCK_4_14_9:
            return std::make_unique<Block_4_14_9Block>(gridPos);
        case BlockType::BLOCK_4_14_10:
            return std::make_unique<Block_4_14_10Block>(gridPos);
        case BlockType::BLOCK_4_14_11:
            return std::make_unique<Block_4_14_11Block>(gridPos);
        case BlockType::BLOCK_4_14_12:
            return std::make_unique<Block_4_14_12Block>(gridPos);
        case BlockType::BLOCK_4_14_13:
            return std::make_unique<Block_4_14_13Block>(gridPos);
        case BlockType::BLOCK_4_14_14:
            return std::make_unique<Block_4_14_14Block>(gridPos);
        case BlockType::BLOCK_4_14_15:
            return std::make_unique<Block_4_14_15Block>(gridPos);
        case BlockType::BLOCK_4_14_16:
            return std::make_unique<Block_4_14_16Block>(gridPos);
        case BlockType::BLOCK_4_15_1:
            return std::make_unique<Block_4_15_1Block>(gridPos);
        case BlockType::BLOCK_4_15_2:
            return std::make_unique<Block_4_15_2Block>(gridPos);
        case BlockType::BLOCK_4_15_3:
            return std::make_unique<Block_4_15_3Block>(gridPos);
        case BlockType::BLOCK_4_15_4:
            return std::make_unique<Block_4_15_4Block>(gridPos);
        case BlockType::BLOCK_4_15_5:
            return std::make_unique<Block_4_15_5Block>(gridPos);
        case BlockType::BLOCK_4_15_6:
            return std::make_unique<Block_4_15_6Block>(gridPos);
        case BlockType::BLOCK_4_15_7:
            return std::make_unique<Block_4_15_7Block>(gridPos);
        case BlockType::BLOCK_4_15_8:
            return std::make_unique<Block_4_15_8Block>(gridPos);
        case BlockType::BLOCK_4_15_9:
            return std::make_unique<Block_4_15_9Block>(gridPos);
        case BlockType::BLOCK_4_15_10:
            return std::make_unique<Block_4_15_10Block>(gridPos);
        case BlockType::BLOCK_4_15_11:
            return std::make_unique<Block_4_15_11Block>(gridPos);
        case BlockType::BLOCK_4_15_12:
            return std::make_unique<Block_4_15_12Block>(gridPos);
        case BlockType::BLOCK_4_15_13:
            return std::make_unique<Block_4_15_13Block>(gridPos);
        case BlockType::BLOCK_4_15_14:
            return std::make_unique<Block_4_15_14Block>(gridPos);
        case BlockType::BLOCK_4_15_15:
            return std::make_unique<Block_4_15_15Block>(gridPos);
        case BlockType::BLOCK_4_15_16:
            return std::make_unique<Block_4_15_16Block>(gridPos);
        case BlockType::BLOCK_4_16_1:
            return std::make_unique<Block_4_16_1Block>(gridPos);
        case BlockType::BLOCK_4_16_2:
            return std::make_unique<Block_4_16_2Block>(gridPos);
        case BlockType::BLOCK_4_16_3:
            return std::make_unique<Block_4_16_3Block>(gridPos);
        case BlockType::BLOCK_4_16_4:
            return std::make_unique<Block_4_16_4Block>(gridPos);
        case BlockType::BLOCK_4_16_5:
            return std::make_unique<Block_4_16_5Block>(gridPos);
        case BlockType::BLOCK_4_16_6:
            return std::make_unique<Block_4_16_6Block>(gridPos);
        case BlockType::BLOCK_4_16_7:
            return std::make_unique<Block_4_16_7Block>(gridPos);
        case BlockType::BLOCK_4_16_8:
            return std::make_unique<Block_4_16_8Block>(gridPos);
        case BlockType::BLOCK_4_16_9:
            return std::make_unique<Block_4_16_9Block>(gridPos);
        case BlockType::BLOCK_4_16_10:
            return std::make_unique<Block_4_16_10Block>(gridPos);
        case BlockType::BLOCK_4_16_11:
            return std::make_unique<Block_4_16_11Block>(gridPos);
        case BlockType::BLOCK_4_16_12:
            return std::make_unique<Block_4_16_12Block>(gridPos);
        case BlockType::BLOCK_4_16_13:
            return std::make_unique<Block_4_16_13Block>(gridPos);
        case BlockType::BLOCK_4_16_14:
            return std::make_unique<Block_4_16_14Block>(gridPos);
        case BlockType::BLOCK_4_16_15:
            return std::make_unique<Block_4_16_15Block>(gridPos);
        case BlockType::BLOCK_4_16_16:
            return std::make_unique<Block_4_16_16Block>(gridPos);
    }
}

std::unique_ptr<Object> ObjectFactory::createCharacter(CharacterType type, PlayerID id, Vector2 startPosition) {
    switch(type) {
        case CharacterType::MARIO:
            return createSpecificCharacter(CharacterType::MARIO, id, startPosition, Constants::Character::Mario::SMALL_SIZE);
        case CharacterType::LUIGI:
            return createSpecificCharacter(CharacterType::LUIGI, id, startPosition, Constants::Character::Luigi::SMALL_SIZE);
        case CharacterType::TOAD:
            return createSpecificCharacter(CharacterType::TOAD, id, startPosition, Constants::Character::Toad::SMALL_SIZE);
        case CharacterType::TOADETTE:
            return createSpecificCharacter(CharacterType::TOADETTE, id, startPosition, Constants::Character::Toadette::SMALL_SIZE);
        default: 
            return nullptr;
    }
}

std::unique_ptr<Character> ObjectFactory::createSpecificCharacter(CharacterType type, PlayerID id, Vector2 startPosition, Vector2 size) {
    CharacterStats stats = getStats(type);
    auto stateFrameData = getFrameData(type);
    
    return std::make_unique<Character>(startPosition, stats, stateFrameData, type, id, size);
}

CharacterStats ObjectFactory::getStats(CharacterType type) {
    switch (type) {
    case CharacterType::MARIO:
        return Constants::Character::Mario::STATS;
    case CharacterType::LUIGI:  
        return Constants::Character::Luigi::STATS;
    case CharacterType::TOAD:
        return Constants::Character::Toad::STATS;
    case CharacterType::TOADETTE:
        return Constants::Character::Toadette::STATS;
    }
}
std::unique_ptr<Object> ObjectFactory::createEnemy(EnemyType type, Vector2 gridPos, Vector2 size) {
    return createSpecificEnemy(type, gridPos, size);
}

std::unique_ptr<Enemy> ObjectFactory::createSpecificEnemy(EnemyType type, Vector2 startPosition, Vector2 size) {
    switch (type) {
    case EnemyType::GOOMBA:
        return std::make_unique<Goomba>(startPosition, size);
    case EnemyType::GREEN_KOOPA:
        return std::make_unique<GreenKoopa>(startPosition, size);
    case EnemyType::RED_KOOPA:
        return std::make_unique<RedKoopa>(startPosition, size);
    default:
        return nullptr; 
    }
}   

std::unique_ptr<Object> ObjectFactory::createItem(ItemType type, Vector2 startPos, Vector2 size) {
    return createSpecificItem(type, startPos, size);
}

std::unique_ptr<Item> ObjectFactory::createSpecificItem(ItemType type, Vector2 startPos, Vector2 size) {
    switch (type) {
    case ItemType::COIN:
		return std::make_unique<Coin>(startPos);
        break;
    case ItemType::MUSHROOM:
        return std::make_unique<Mushroom>(startPos);
        break;
	case ItemType::FIRE_FLOWER:
        return std::make_unique<Fire_Flower>(startPos);
		break;
	case ItemType::STAR:
        return std::make_unique<Star>(startPos);
		break;
    case ItemType::ONE_UP:
	    return std::make_unique<One_Up>(startPos);
		break;
    default:
        return std::make_unique<Coin>(startPos);
    }
}


std::vector<std::vector<Rectangle>> ObjectFactory::getFrameData(CharacterType type) {
    switch (type) {
    case CharacterType::MARIO: 
        return Constants::Character::Mario::SMALL_FRAME_DATA;
    case CharacterType::LUIGI:
        return Constants::Character::Luigi::SMALL_FRAME_DATA;
    case CharacterType::TOAD:
        return Constants::Character::Toad::SMALL_FRAME_DATA;
    case CharacterType::TOADETTE:
        return Constants::Character::Toadette::SMALL_FRAME_DATA;
    }
}

std::unique_ptr<Object> ObjectFactory::createKoopaShell(KoopaShellType type, Vector2 gridPos, Vector2 size) {
    return std::make_unique<KoopaShell>(type, gridPos, size);
}

std::unique_ptr<Object> ObjectFactory::createSpring(Vector2 position, Vector2 size) {
    return std::make_unique<Spring>(position, size);
}

std::unique_ptr<Object> ObjectFactory::createProjectile(ProjectileType type, Vector2 position, int direction, Vector2 size) {
    return createSpecificProjectile(type, position, direction, size);
}

std::unique_ptr<Projectile> ObjectFactory::createSpecificProjectile(ProjectileType type, Vector2 position, int direction, Vector2 size) {
    switch (type) {
    case ProjectileType::FIRE_BALL:
        return std::make_unique<FireBall>(position, direction, size);
      // case...
    }
}